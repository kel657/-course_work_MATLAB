clear all  % очистка рабочей области
global omega
g=9.8; % ускорение свободного падения
L=1; % длина маятника
T=2*pi*(g/L)^0.5; % период колебаний
omega=2*pi/T; % циклическая частота
phi0=pi*0.995; % начальный угол
R0=[phi0 0]; % начальные условия
N=20000; % числов узлов временной сетки
[t Z]=ode45('Oscillator',[0:3*T/N:3*T],R0); % решение уравнения 
                                            % движения
% вычисление декартовых координат маятника
for i=1:N+1
         if Z(i,1)>pi/2
            S1(i,1)=L*cos(Z(i,1)-pi/2);
            S1(i,2)=L*sin(Z(i,1)-pi/2);
        end;
        if Z(i,1)<-pi/2
           S1(i,1)=-L*cos(abs(Z(i,1))-pi/2);
           S1(i,2)=L*sin(abs(Z(i,1))-pi/2);
        end;
        if (-pi/2<=Z(i,1))&(Z(i,1)<=pi/2)
           S1(i,1)=L*sin(Z(i,1));
           S1(i,2)=-L*cos(Z(i,1));
        end;
 end;
% визуализация мгновенных значений координат маятника (рис. 8.7)
figure(1); plot(t,S1(:,1)); %,t,S1(:,2)
% координаты подвеса
Sa(1,1)=0; 
Sa(1,2)=0;
% координаты маятника
Sa(2,1)=S1(1,1);
Sa(2,2)=S1(1,2);
% отображение маятника в момент времени t=0 (рис. 8.8)
figure(2); plot(Sa(:,1),Sa(:,2),Sa(2,1),Sa(2,2),'o');
axis([-1.2 1.2 -1.2 1.2]);
set(gca,'nextplot','replacechildren'); % включение режима перерисовки 
                                       % графиков в одно и том же окне
k=1;
% создание анимационного клипа
for i=1:100:length(S1)
        Sa(2,1)=S1(i,1);
        Sa(2,2)=S1(i,2);
        C=plot(Sa(:,1),Sa(:,2),Sa(2,1),Sa(2,2),'o');
        F(k)=getframe;
        k=k+1;
end;
movie(F,1) % однократное воспроизведение клипа

